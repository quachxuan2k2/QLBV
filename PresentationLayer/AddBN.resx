<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="STT.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>